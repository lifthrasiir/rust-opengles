VPATH=%VPATH%

CC ?= gcc
CXX ?= g++
CXXFLAGS ?=
AR ?= ar
RUSTC ?= rustc
RUSTFLAGS ?=

ifeq ($(shell uname -s),Darwin)
ifeq ($(shell sw_vers | grep -c 10.6),1)
RUSTFLAGS += --cfg mac_10_6
endif
ifeq ($(shell sw_vers | grep -c 10.7),1)
RUSTFLAGS += --cfg mac_10_7
endif
endif

ifneq (,$(findstring MINGW,$(shell uname -s)))
ABI = stdcall
ANGLE_SRC = $(VPATH)/angle/src
ANGLE_DLLS = libGLESv2.dll libEGL.dll
ANGLE_CLEAN = angle-clean
else
ABI = cdecl
ANGLE_SRC =
ANGLE_DLLS =
ANGLE_CLEAN =
endif

RUST_SRC = cgl.rs
RUST_GEN_TMPL = gl2.rs.in egl.rs.in
RUST_GEN_SRC = $(patsubst %.rs.in,%.rs,$(RUST_GEN_TMPL))

.PHONY: all
all:	librustopengles.dummy

%.o:	%.c
	$(CC) $< -o $@ -c $(CFLAGS)

%.rs:	%.rs.in
	sed 's/"ABI"/"$(ABI)"/' $< > $@

librustopengles.dummy: opengles.rc $(RUST_SRC) $(RUST_GEN_SRC) $(ANGLE_DLLS)
	$(RUSTC) $(RUSTFLAGS) $< -o $@
	touch $@

ifneq ($(ANGLE_SRC),)
libEGL.dll: $(ANGLE_SRC)/libEGL.dll
	cp $< $@
libGLESv2.dll: $(ANGLE_SRC)/libGLESv2.dll
	cp $< $@
$(ANGLE_SRC)/libEGL.dll:
	cd $(ANGLE_SRC) && $(MAKE) libEGL.dll
$(ANGLE_SRC)/libGLESv2.dll:
	cd $(ANGLE_SRC) && $(MAKE) libGLESv2.dll
endif

rustopengles-test: opengles.rc $(RUST_SRC)
	$(RUSTC) $(RUSTFLAGS) $< -o $@ --test

check: rustopengles-test
	./rustopengles-test

.PHONY: clean angle-clean
clean: $(ANGLE_CLEAN)
	rm -f *.o *.a *.so *.dylib *.dll *.dummy *-test $(RUST_GEN_SRC)
angle-clean:
	cd $(ANGLE_SRC) && $(MAKE) clean

