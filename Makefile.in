VPATH=%VPATH%

RUSTC ?= rustc
RUSTFLAGS ?=
EXT_DEPS ?=
RUSTDOC ?= rustdoc
RUSTDOC_FLAGS ?=
RUSTDOC_TARGET ?= doc

ifeq ($(shell uname -s),Darwin)
ifeq ($(shell sw_vers | grep -c 10.6),1)
RUSTFLAGS += --cfg mac_10_6
endif
ifeq ($(shell sw_vers | grep -c 10.7),1)
RUSTFLAGS += --cfg mac_10_7
endif
else
endif

ifneq (,$(findstring MINGW,$(shell uname -s)))
ABI = stdcall
ANGLE_SRC = $(VPATH)/angle/src
ANGLE_DLLS = libGLESv2.dll libEGL.dll
ANGLE_CLEAN = angle-clean
else
ABI = cdecl
ANGLE_SRC =
ANGLE_DLLS =
ANGLE_CLEAN =
endif

RUST_SRC=$(shell find $(VPATH)/. -type f -name '*.rs')
LIB = ./libopengles.rlib
TEST_BIN = ./opengles-test

.PHONY: all
all:    $(LIB)

%.o:	%.c
	$(CC) $< -o $@ -c $(CFLAGS)

$(LIB): lib.rs $(RUST_SRC) $(ANGLE_DLLS) $(EXT_DEPS)
	$(RUSTC) $(RUSTFLAGS) $< --out-dir .

ifneq ($(ANGLE_SRC),)
libEGL.dll: $(ANGLE_SRC)/libEGL.dll
	cp $< $@
libGLESv2.dll: $(ANGLE_SRC)/libGLESv2.dll
	cp $< $@
$(ANGLE_SRC)/libEGL.dll:
	cd $(ANGLE_SRC) && $(MAKE) libEGL.dll
$(ANGLE_SRC)/libGLESv2.dll:
	cd $(ANGLE_SRC) && $(MAKE) libGLESv2.dll
endif

$(TEST_BIN): lib.rs $(RUST_SRC)
	$(RUSTC) $(RUSTFLAGS) $< -o $@ --test

.PHONY: doc
doc: $(RUSTDOC_TARGET)/opengles/index.html

$(RUSTDOC_TARGET)/opengles/index.html: lib.rs $(RUST_SRC) $(EXT_DEPS)
	$(RUSTDOC) $(RUSTDOC_FLAGS) $< -o $(RUSTDOC_TARGET)

.PHONY: check
check: $(TEST_BIN)
	$(TEST_BIN) $(TEST)

.PHONY: clean clean-deps angle-clean
clean:
	rm -f *.o *.a *.so *.dylib *.rlib *.dll *.dummy *-test
clean-deps: clean angle-clean
angle-clean:
	cd $(ANGLE_SRC) && $(MAKE) clean
